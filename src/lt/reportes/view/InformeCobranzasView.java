/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lt.reportes.view;

import java.awt.Checkbox;
import java.awt.Color;

import java.awt.Frame;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import lt.dao.DaoCobros;
import lt.models.Cobranza;
import lt.reportes.entities.ListadoCobranzas;
import lt.tablas.ModeloTablaCobranzasInforme;
import lt.util.ConnectionHelper;
import lt.util.Utilidad;

import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;


/**
 *
 * @author brother
 */
public class InformeCobranzasView extends javax.swing.JDialog {

    private DaoCobros daoCobros;
    private List<Cobranza> cobros;
    private Cobranza cobranza;
    private String campo;
    private ModeloTablaCobranzasInforme mtInforme;
    private boolean opcionSeleccionada;
    private String desde;
    private String hasta;
    private boolean paramFecha;

    /**
     * Creates new form InformeCobranzasView
     */
    public InformeCobranzasView() {
        super();
        setLocationRelativeTo(this);
        initComponents();
        estadoInicial();

        estilosFecha();
        Utilidad.soloNumeros(txHasta);
        Utilidad.soloNumeros(txDesde);
      
        cbOpcion.setSelectedIndex(0);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        mtInforme = new ModeloTablaCobranzasInforme();
        jTable1 = new javax.swing.JTable();
        btnImprimir = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txDesde = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txHasta = new javax.swing.JTextField();
        cbOpcion = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        datePicker1 = new com.github.lgooddatepicker.components.DatePicker();
        datePicker2 = new com.github.lgooddatepicker.components.DatePicker();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnProcesar = new javax.swing.JButton();
        lblOrden = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Infome de Cobranzas");

        jTable1.setModel(mtInforme);
        jScrollPane1.setViewportView(jTable1);

        btnImprimir.setText("Imprimir");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Seleccione una opción de filtrado:"));

        jLabel1.setText("desde:");

        txDesde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txDesdeActionPerformed(evt);
            }
        });

        jLabel2.setText("hasta:");

        txHasta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txHastaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(4, 4, 4)
                .addComponent(txDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txDesde, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(txHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        cbOpcion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Listar todas las cobranzas", "N° de Movimiento", "Clientes", "Fecha Cobro" }));
        cbOpcion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbOpcionItemStateChanged(evt);
            }
        });

        datePicker1.setDate(LocalDate.now());

        LocalDate ahora = LocalDate.now();

        datePicker2.setDate(ahora);

        jLabel3.setText("desde:");

        jLabel4.setText("hasta:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(datePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(datePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(datePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(datePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnProcesar.setText("Procesar");
        btnProcesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcesarActionPerformed(evt);
            }
        });

        lblOrden.setText("Defecto");

        jLabel5.setText("Ordenado por:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblOrden)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbOpcion, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnProcesar, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cbOpcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnProcesar, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(lblOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 579, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnImprimir))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnImprimir)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
   imprimir();
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void txDesdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txDesdeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txDesdeActionPerformed

    private void txHastaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txHastaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txHastaActionPerformed

    private void cbOpcionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbOpcionItemStateChanged
        filtrarAccion();
    }//GEN-LAST:event_cbOpcionItemStateChanged

    private void btnProcesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcesarActionPerformed
     
            procesar();
        
    }//GEN-LAST:event_btnProcesarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        ConnectionHelper.setUp();
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(InformeCobranzasView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(InformeCobranzasView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(InformeCobranzasView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(InformeCobranzasView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                InformeCobranzasView dialog = new InformeCobranzasView();
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnProcesar;
    private javax.swing.JComboBox<String> cbOpcion;
    private com.github.lgooddatepicker.components.DatePicker datePicker1;
    private com.github.lgooddatepicker.components.DatePicker datePicker2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblOrden;
    private javax.swing.JTextField txDesde;
    private javax.swing.JTextField txHasta;
    // End of variables declaration//GEN-END:variables

    private void filtrarAccion() {

        if (cbOpcion.getSelectedIndex()==0) {
            paramFecha =false;
            jPanel1.setVisible(false);
            jPanel3.setVisible(false);
        }
        if (cbOpcion.getSelectedIndex() == 1) {
            System.out.println("opcion: " + cbOpcion.getSelectedIndex());
            jPanel1.setVisible(true);
            jPanel3.setVisible(false);
            campo = "cobran_codigo";
            paramFecha = false;

        } 
        if (cbOpcion.getSelectedIndex() == 2) {
            System.out.println("opcion: " + cbOpcion.getSelectedIndex());
            jPanel1.setVisible(true);
            jPanel3.setVisible(false);
            campo = "cli_codigo";
            paramFecha = false;

        } if(cbOpcion.getSelectedIndex()==3) {
            System.out.println("seleccion:" + cbOpcion.getSelectedIndex());
            jPanel1.setVisible(false);
            jPanel3.setVisible(true);
            campo = "cobran_fecha";
            paramFecha = true;
        }

    }

        private void ordenarColumnas() {
        TableRowSorter<TableModel> sorter = new TableRowSorter<>(jTable1.getModel());
        jTable1.setRowSorter(sorter);
        List<RowSorter.SortKey> sortKeys = new ArrayList<>();
        int columnIndexToSort = 0;
        sortKeys.add(new RowSorter.SortKey(columnIndexToSort, SortOrder.ASCENDING));
        sorter.setSortKeys(sortKeys);
        sorter.sort();
    }
private void capturarColumnaSeleccionada(){
       jTable1.getTableHeader().addMouseListener(new MouseAdapter() {
           @Override
           public void mouseClicked(MouseEvent e){
               int col = jTable1.columnAtPoint(e.getPoint());
              String nombreColumna = jTable1.getColumnName(col);
               lblOrden.setText(nombreColumna);
           }
});
}
    private void procesar() {
        if (cbOpcion.getSelectedIndex()==0) {
            listarTodo();
        } else if (paramFecha) {
            
            recuperarPorParametro(campo, datePicker1.getDateStringOrEmptyString(), datePicker2.getDateStringOrEmptyString());
        } else {
            if (verificarCampos()) {
            recuperarPorParametro(campo, txDesde.getText(), txHasta.getText());
                
            }
            
        }
    }

    private void listarTodo() {
        daoCobros = new DaoCobros();
        cobros = daoCobros.recuperarTodo();
        mtInforme.setLista(cobros);
        jTable1.setModel(mtInforme);
        ordenarColumnas();
        capturarColumnaSeleccionada();
        lblOrden.setText("Defecto");

    }

    private void estadoInicial() {
        jPanel1.setVisible(false);
        jPanel3.setVisible(false);
    }

    private void recuperarPorParametro(String campo, String desde, String hasta) {
        daoCobros = new DaoCobros();
        cobros = daoCobros.recuperarPorParametro(campo, desde, hasta);
        mtInforme.setLista(cobros);
        jTable1.setModel(mtInforme);
        ordenarColumnas();
        lblOrden.setText("Defecto");
        capturarColumnaSeleccionada();
    }

    private void recuperarPorParametroNative(String campo, String desde, String hasta) {
        daoCobros = new DaoCobros();
        cobros = daoCobros.recuperarPorParametroNative(campo, desde, hasta);
        mtInforme.setLista(cobros);
        jTable1.setModel(mtInforme);
    }

    private void estilosFecha() {
        datePicker1.getComponentDateTextField().setEnabled(false);
        datePicker1.setLocale(Locale.forLanguageTag("Es"));
        datePicker1.getComponentDateTextField().setDisabledTextColor(Color.BLACK);
        datePicker2.getComponentDateTextField().setEnabled(false);
        datePicker2.setLocale(Locale.forLanguageTag("Es"));
        datePicker2.getComponentDateTextField().setDisabledTextColor(Color.BLACK);
    }

    private boolean verificarCampos() {
        boolean validar = false;
        if (txDesde.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "El campo 'Desde' se encuetra vacío, favor introduzca un dato");
            txDesde.requestFocus();
        }else if(txHasta.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "El campo 'Hasta' se encuetra vacío, favor introduzca un dato");
            txHasta.requestFocus();
        }else{
            validar = true;
        }
        
         return validar;
    }

    private void imprimir() {
        List listado = new ArrayList();
      
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            //""N° Mov.","Cliente","Vehículo", "Monto Pagado"
            ListadoCobranzas cobranza = new ListadoCobranzas();
            cobranza.setId_Cobranza(Integer.parseInt(jTable1.getValueAt(i, 0).toString()));
            cobranza.setNombreCliente_Cobranza(jTable1.getValueAt(i, 1).toString());
            cobranza.setMatriculaVehiculo_Cobranza(jTable1.getValueAt(i, 2).toString());
            cobranza.setMonto_Cobranza(Double.parseDouble(jTable1.getValueAt(i, 3).toString()));
            listado.add(cobranza);
        }
        Map parametro = new HashMap();
        parametro.put("Orden", lblOrden.getText());

         try {
            // JasperReport jasper = (JasperReport) JRLoader.loadObject("/home/brother/NetBeansProjects/JavaFXm/LtNw/src/lt/reportes/InformeCobranzas.jasper");
             JasperReport jasper = (JasperReport) JRLoader.loadObjectFromFile("reportes/InformeCobranzas.jasper");
             JasperPrint print = JasperFillManager.fillReport(jasper, parametro, new JRBeanCollectionDataSource(listado));
             JasperViewer view = new JasperViewer(print, false);
             view.setModalExclusionType(ModalExclusionType.APPLICATION_EXCLUDE);
             view.setExtendedState(Frame.MAXIMIZED_BOTH);
             view.setVisible(true);
        } catch (Exception e) {
        }
    }
}
